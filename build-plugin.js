#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const archiver = require('archiver');
const { execSync } = require('child_process');

class WordPressPluginBuilder {
    constructor() {
        this.pluginName = 'catalog-master';
        this.version = '1.0.0';
        this.outputDir = './dist';
        this.sourceDir = './';
        
        // –§–∞–π–ª–∏ —Ç–∞ –ø–∞–ø–∫–∏ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–Ω—è –≤ –∞—Ä—Ö—ñ–≤
        this.includeFiles = [
            'catalog-master.php'
        ];
        
        this.includeDirs = [
            'includes',
            'assets'
        ];
        
        // –§–∞–π–ª–∏ —Ç–∞ –ø–∞–ø–∫–∏ –¥–ª—è –≤–∏–∫–ª—é—á–µ–Ω–Ω—è
        this.excludePatterns = [
            'node_modules',
            '.git',
            '.gitignore',
            '.gitattributes',
            'build-plugin.js',
            'package.json',
            'package-lock.json',
            'vendor',
            'dist',
            'docs',
            '.DS_Store',
            'Thumbs.db',
            '.env',
            'ide-helper.php'
        ];
        
        // Patterns for file extensions
        this.excludeExtensions = ['.log'];
    }

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è - —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –ø–∞–ø–æ–∫
    init() {
        console.log('üöÄ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–±—ñ—Ä–∫–∏ –ø–ª–∞–≥—ñ–Ω–∞ WordPress...\n');
        
        // –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–∞–ø–∫—É dist —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î
        if (!fs.existsSync(this.outputDir)) {
            fs.mkdirSync(this.outputDir, { recursive: true });
            console.log(`‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –ø–∞–ø–∫—É ${this.outputDir}`);
        }
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
    validateFiles() {
        console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–∞–π–ª—ñ–≤...');
        
        let hasErrors = false;
        
        // –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≥–æ–ª–æ–≤–Ω–∏–π —Ñ–∞–π–ª –ø–ª–∞–≥—ñ–Ω–∞
        if (!fs.existsSync('catalog-master.php')) {
            console.error('‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ–π –≥–æ–ª–æ–≤–Ω–∏–π —Ñ–∞–π–ª –ø–ª–∞–≥—ñ–Ω–∞: catalog-master.php');
            hasErrors = true;
        }
        
        // –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–∞–ø–∫–∏
        this.includeDirs.forEach(dir => {
            if (!fs.existsSync(dir)) {
                console.error(`‚ùå –í—ñ–¥—Å—É—Ç–Ω—è –ø–∞–ø–∫–∞: ${dir}`);
                hasErrors = true;
            }
        });
        
        if (hasErrors) {
            console.error('\nüí• –ü–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó. –ó–±—ñ—Ä–∫–∞ –ø–µ—Ä–µ—Ä–≤–∞–Ω–∞.');
            process.exit(1);
        }
        
        console.log('‚úÖ –í—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —Ñ–∞–π–ª–∏ –∑–Ω–∞–π–¥–µ–Ω–æ\n');
    }

    // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–µ—Ä—Å—ñ—ó –∑ –≥–æ–ª–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª—É –ø–ª–∞–≥—ñ–Ω–∞
    getPluginVersion() {
        try {
            const mainFile = fs.readFileSync('catalog-master.php', 'utf8');
            const versionMatch = mainFile.match(/Version:\s*(.+)/);
            if (versionMatch) {
                this.version = versionMatch[1].trim();
                console.log(`üìã –í–µ—Ä—Å—ñ—è –ø–ª–∞–≥—ñ–Ω–∞: ${this.version}`);
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è  –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤–µ—Ä—Å—ñ—é –∑ —Ñ–∞–π–ª—É –ø–ª–∞–≥—ñ–Ω–∞');
        }
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —Ñ–∞–π–ª/–ø–∞–ø–∫–∞ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –≤–∏–∫–ª—é—á–µ–Ω—ñ
    shouldExclude(filePath) {
        const fileName = path.basename(filePath);
        const fileExtension = path.extname(filePath);
        
        // Check exclude patterns
        const matchesPattern = this.excludePatterns.some(pattern => {
            if (pattern.includes('*')) {
                // –ü—Ä–æ—Å—Ç–∏–π wildcard matcher
                const regex = new RegExp(pattern.replace(/\*/g, '.*'));
                return regex.test(fileName);
            }
            return filePath.includes(pattern);
        });
        
        // Check file extensions
        const matchesExtension = this.excludeExtensions.includes(fileExtension);
        
        return matchesPattern || matchesExtension;
    }

    // –†–µ–∫—É—Ä—Å–∏–≤–Ω–µ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –¥–æ –∞—Ä—Ö—ñ–≤—É
    addFilesToArchive(archive, dirPath, archivePath = '') {
        const items = fs.readdirSync(dirPath);
        
        items.forEach(item => {
            const fullPath = path.join(dirPath, item);
            const relativePath = archivePath ? path.join(archivePath, item) : item;
            
            if (this.shouldExclude(fullPath)) {
                return;
            }
            
            const stats = fs.statSync(fullPath);
            
            if (stats.isDirectory()) {
                this.addFilesToArchive(archive, fullPath, relativePath);
            } else {
                archive.file(fullPath, { name: relativePath });
                console.log(`  üìÑ ${relativePath}`);
            }
        });
    }

    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è ZIP –∞—Ä—Ö—ñ–≤—É
    async createArchive() {
        const timestamp = new Date().toISOString().slice(0, 19).replace(/:/g, '-');
        const filename = `${this.pluginName}-v${this.version}-${timestamp}.zip`;
        const outputPath = path.join(this.outputDir, filename);
        
        console.log(`üì¶ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—Ä—Ö—ñ–≤—É: ${filename}\n`);
        
        return new Promise((resolve, reject) => {
            const output = fs.createWriteStream(outputPath);
            const archive = archiver('zip', {
                zlib: { level: 9 } // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–µ —Å—Ç–∏—Å–Ω–µ–Ω–Ω—è
            });
            
            output.on('close', () => {
                const sizeKB = (archive.pointer() / 1024).toFixed(2);
                console.log(`\n‚úÖ –ê—Ä—Ö—ñ–≤ —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!`);
                console.log(`üìÅ –§–∞–π–ª: ${outputPath}`);
                console.log(`üìä –†–æ–∑–º—ñ—Ä: ${sizeKB} KB`);
                console.log(`üìÑ –§–∞–π–ª—ñ–≤ —É –∞—Ä—Ö—ñ–≤—ñ: ${archive.pointer() > 0 ? '—Ç–∞–∫' : '–Ω—ñ'}`);
                resolve(outputPath);
            });
            
            archive.on('error', (err) => {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—Ä—Ö—ñ–≤—É:', err);
                reject(err);
            });
            
            archive.pipe(output);
            
            // –î–æ–¥–∞—Ç–∏ –≤—Å—ñ —Ñ–∞–π–ª–∏ –≤ –∫–æ—Ä–µ–Ω—å –∞—Ä—Ö—ñ–≤—É –∑ –ø—Ä–µ—Ñ—ñ–∫—Å–æ–º –ø–∞–ø–∫–∏ –ø–ª–∞–≥—ñ–Ω–∞
            console.log('üìÅ –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –¥–æ –∞—Ä—Ö—ñ–≤—É:');
            
            // –î–æ–¥–∞—Ç–∏ –æ–∫—Ä–µ–º—ñ —Ñ–∞–π–ª–∏
            this.includeFiles.forEach(file => {
                if (fs.existsSync(file)) {
                    archive.file(file, { name: `${this.pluginName}/${file}` });
                    console.log(`  üìÑ ${this.pluginName}/${file}`);
                }
            });
            
            // –î–æ–¥–∞—Ç–∏ –ø–∞–ø–∫–∏
            this.includeDirs.forEach(dir => {
                if (fs.existsSync(dir)) {
                    console.log(`  üìÅ ${this.pluginName}/${dir}/`);
                    this.addFilesToArchive(archive, dir, `${this.pluginName}/${dir}`);
                }
            });
            
            archive.finalize();
        });
    }

    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–∫–æ–∂ –∫–æ–ø—ñ—ó –±–µ–∑ –≤–µ—Ä—Å—ñ—ó –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
    async createSimpleArchive() {
        const filename = `${this.pluginName}.zip`;
        const outputPath = path.join(this.outputDir, filename);
        
        console.log(`\nüì¶ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Å—Ç–æ–≥–æ –∞—Ä—Ö—ñ–≤—É: ${filename}`);
        
        return new Promise((resolve, reject) => {
            const output = fs.createWriteStream(outputPath);
            const archive = archiver('zip', {
                zlib: { level: 9 }
            });
            
            output.on('close', () => {
                console.log(`‚úÖ –ü—Ä–æ—Å—Ç–∏–π –∞—Ä—Ö—ñ–≤ —Å—Ç–≤–æ—Ä–µ–Ω–æ: ${outputPath}`);
                resolve(outputPath);
            });
            
            archive.on('error', reject);
            archive.pipe(output);
            
            // –î–æ–¥–∞—Ç–∏ —Ñ–∞–π–ª–∏
            this.includeFiles.forEach(file => {
                if (fs.existsSync(file)) {
                    archive.file(file, { name: `${this.pluginName}/${file}` });
                }
            });
            
            this.includeDirs.forEach(dir => {
                if (fs.existsSync(dir)) {
                    this.addFilesToArchive(archive, dir, `${this.pluginName}/${dir}`);
                }
            });
            
            archive.finalize();
        });
    }

    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω—Å—Ç–∞–ª—è—Ü—ñ–π–Ω–∏—Ö —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ–π
    createInstallInstructions(archivePath) {
        const instructions = `
üì• –Ü–ù–°–¢–†–£–ö–¶–Ü–á –î–õ–Ø –í–°–¢–ê–ù–û–í–õ–ï–ù–ù–Ø –ü–õ–ê–ì–Ü–ù–ê CATALOG MASTER

1Ô∏è‚É£ –ê–í–¢–û–ú–ê–¢–ò–ß–ù–ï –í–°–¢–ê–ù–û–í–õ–ï–ù–ù–Ø:
   ‚Ä¢ –£–≤—ñ–π–¥—ñ—Ç—å –≤ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å WordPress
   ‚Ä¢ –ü–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ "–ü–ª–∞–≥—ñ–Ω–∏" ‚Üí "–î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π"
   ‚Ä¢ –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ø–ª–∞–≥—ñ–Ω"
   ‚Ä¢ –û–±–µ—Ä—ñ—Ç—å —Ñ–∞–π–ª: ${path.basename(archivePath)}
   ‚Ä¢ –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∑–∞—Ä–∞–∑"
   ‚Ä¢ –ê–∫—Ç–∏–≤—É–π—Ç–µ –ø–ª–∞–≥—ñ–Ω

2Ô∏è‚É£ –†–£–ß–ù–ï –í–°–¢–ê–ù–û–í–õ–ï–ù–ù–Ø:
   ‚Ä¢ –†–æ–∑–ø–∞–∫—É–π—Ç–µ –∞—Ä—Ö—ñ–≤ ${path.basename(archivePath)}
   ‚Ä¢ –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –ø–∞–ø–∫—É 'catalog-master' –≤ /wp-content/plugins/
   ‚Ä¢ –í –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ –ø–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ "–ü–ª–∞–≥—ñ–Ω–∏"
   ‚Ä¢ –ê–∫—Ç–∏–≤—É–π—Ç–µ "Catalog Master"

3Ô∏è‚É£ –ü–ï–†–®–ò–ô –ó–ê–ü–£–°–ö:
   ‚Ä¢ –ü–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ "Catalog Master" –≤ –º–µ–Ω—é –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
   ‚Ä¢ –°—Ç–≤–æ—Ä—ñ—Ç—å –Ω–æ–≤–∏–π –∫–∞—Ç–∞–ª–æ–≥
   ‚Ä¢ –ù–∞–ª–∞—à—Ç—É–π—Ç–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Google Sheets
   ‚Ä¢ –ù–∞–ª–∞—à—Ç—É–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å —Å—Ç–æ–≤–ø—Ü—ñ–≤
   ‚Ä¢ –Ü–º–ø–æ—Ä—Ç—É–π—Ç–µ –¥–∞–Ω—ñ

üîß –í–ò–ú–û–ì–ò:
   ‚Ä¢ WordPress 5.0+
   ‚Ä¢ PHP 8.0+
   ‚Ä¢ MySQL 5.6+

üìö –î–û–ö–£–ú–ï–ù–¢–ê–¶–Ü–Ø:
   ‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—ñ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –≤ —Ñ–∞–π–ª—ñ README.md
   ‚Ä¢ –ü—ñ–¥—Ç—Ä–∏–º–∫–∞: —Å—Ç–≤–æ—Ä—ñ—Ç—å issue –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—ó

üéâ –ì–æ—Ç–æ–≤–æ! –ü–ª–∞–≥—ñ–Ω –≥–æ—Ç–æ–≤–∏–π –¥–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è.
`;

        const instructionsPath = path.join(this.outputDir, 'INSTALL.txt');
        fs.writeFileSync(instructionsPath, instructions.trim());
        console.log(`üìã –°—Ç–≤–æ—Ä–µ–Ω–æ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó: ${instructionsPath}`);
    }

    // –ì–æ–ª–æ–≤–Ω–∏–π –º–µ—Ç–æ–¥ –∑–±—ñ—Ä–∫–∏
    async build() {
        try {
            console.log('üî® –ó–ë–Ü–†–ö–ê WORDPRESS –ü–õ–ê–ì–Ü–ù–ê CATALOG MASTER\n');
            console.log('=' .repeat(50));
            
            this.init();
            this.validateFiles();
            this.getPluginVersion();
            
            console.log(''); // –ü—É—Å—Ç–∏–π —Ä—è–¥–æ–∫ –¥–ª—è –∫—Ä–∞—Å–æ—Ç–∏
            
            // –°—Ç–≤–æ—Ä–∏—Ç–∏ –æ—Å–Ω–æ–≤–Ω–∏–π –∞—Ä—Ö—ñ–≤ –∑ –≤–µ—Ä—Å—ñ—î—é
            const mainArchive = await this.createArchive();
            
            // –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–æ—Å—Ç–∏–π –∞—Ä—Ö—ñ–≤ –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
            await this.createSimpleArchive();
            
            // –°—Ç–≤–æ—Ä–∏—Ç–∏ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó
            this.createInstallInstructions(mainArchive);
            
            console.log('\n' + '=' .repeat(50));
            console.log('üéâ –ó–ë–Ü–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–Ü–®–ù–û!');
            console.log(`üìÅ –ê—Ä—Ö—ñ–≤–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ –ø–∞–ø—Ü—ñ: ${this.outputDir}`);
            console.log('üöÄ –ü–ª–∞–≥—ñ–Ω –≥–æ—Ç–æ–≤–∏–π –¥–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –≤ WordPress!');
            
        } catch (error) {
            console.error('\nüí• –ü–û–ú–ò–õ–ö–ê –ó–ë–Ü–†–ö–ò:', error.message);
            process.exit(1);
        }
    }
}

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
function checkDependencies() {
    try {
        require('archiver');
    } catch (error) {
        console.error('‚ùå –í—ñ–¥—Å—É—Ç–Ω—è –∑–∞–ª–µ–∂–Ω—ñ—Å—Ç—å: archiver');
        console.log('üì¶ –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: npm install archiver');
        process.exit(1);
    }
}

// –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
async function main() {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞
    const args = process.argv.slice(2);
    
    if (args.includes('--help') || args.includes('-h')) {
        console.log(`
üî® WordPress Plugin Builder –¥–ª—è Catalog Master

–í–ò–ö–û–†–ò–°–¢–ê–ù–ù–Ø:
  node build-plugin.js [–æ–ø—Ü—ñ—ó]

–û–ü–¶–Ü–á:
  --help, -h     –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü—é –¥–æ–≤—ñ–¥–∫—É
  --version, -v  –ü–æ–∫–∞–∑–∞—Ç–∏ –≤–µ—Ä—Å—ñ—é —Å–∫—Ä–∏–ø—Ç–∞

–ü–†–ò–ö–õ–ê–î–ò:
  node build-plugin.js           # –°—Ç–≤–æ—Ä–∏—Ç–∏ –∞—Ä—Ö—ñ–≤ –ø–ª–∞–≥—ñ–Ω–∞
  npm run build                  # –Ø–∫—â–æ –¥–æ–¥–∞–Ω–æ –≤ package.json

–í–ò–•–Ü–î–ù–Ü –§–ê–ô–õ–ò:
  ./dist/catalog-master-v{–≤–µ—Ä—Å—ñ—è}-{–¥–∞—Ç–∞}.zip  # –û—Å–Ω–æ–≤–Ω–∏–π –∞—Ä—Ö—ñ–≤
  ./dist/catalog-master.zip                   # –ü—Ä–æ—Å—Ç–∏–π –∞—Ä—Ö—ñ–≤ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
  ./dist/INSTALL.txt                          # –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è
`);
        return;
    }
    
    if (args.includes('--version') || args.includes('-v')) {
        console.log('WordPress Plugin Builder v1.0.0');
        return;
    }
    
    checkDependencies();
    
    const builder = new WordPressPluginBuilder();
    await builder.build();
}

// –ó–∞–ø—É—Å–∫
if (require.main === module) {
    main().catch(console.error);
}

module.exports = WordPressPluginBuilder; 